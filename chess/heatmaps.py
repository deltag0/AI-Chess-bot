class pawnMap():
    """
    General values given to black's pawns based on where they are on the board.
    """
    def __init__(self, square: str) -> None:
        self.square = square

    def mapValue(self) -> int:
        """
        returns the value from where the pawn is.
        """
        map = {
            'a1': 0,
            'b1': 0,
            'c1': 0,
            'd1': 0,
            'e1': 0,
            'f1': 0,
            'g1': 0,
            'h1': 0,
            'a2': -50,
            'b2': -50,
            'c2': -50,
            'd2': -50,
            'e2': -50,
            'f2': -50,
            'g2': -50,
            'h2': -50,
            'a3': -10,
            'b3': -10,
            'c3': -20,
            'd3': -30,
            'e3': -30,
            'f3': -20,
            'g3': -10,
            'h3': -10,
            'a4': -5,
            'b4': -5,
            'c4': -10,
            'd4': -25,
            'e4': -25,
            'f4': -10,
            'g4': -5,
            'h4': -5,
            'a5': 0,
            'b5': 0,
            'c5': 0,
            'd5': -20,
            'e5': -20,
            'f5': 0,
            'g5': 0,
            'h5': 0,
            'a6': -6,
            'b6': 5,
            'c6': 10,
            'd6': 0,
            'e6': 0,
            'f6': 10,
            'g6': 5,
            'h6': -5,
            'a7': -5,
            'b7': -10,
            'c7': -10,
            'd7': 20,
            'e7': 20,
            'f7': -10,
            'g7': -10,
            'h7': -5,
            'a8': 0,
            'b8': 0,
            'c8': 0,
            'd8': 0,
            'e8': 0,
            'f8': 0,
            'g8': 0,
            'h8': 0,
        }
        return map[self.square]

class knightMap():
    """
    general values given to black's knights based on where they are on the board.
    """
    def __init__(self, square: str) -> None:
        self.square = square

    def mapValue(self) -> int:
        """
        returns the value from where the knight is.
        """
        map = {
            'a1': 50,
            'b1': 40,
            'c1': 30,
            'd1': 30,
            'e1': 30,
            'f1': 30,
            'g1': 40,
            'h1': 50,
            'a2': 40,
            'b2': 20,
            'c2': 0,
            'd2': 0,
            'e2': 0,
            'f2': 0,
            'g2': 20,
            'h2': 40,
            'a3': 30,
            'b3': 0,
            'c3': -10,
            'd3': -15,
            'e3': -15,
            'f3': -10,
            'g3': 0,
            'h3': 30,
            'a4': 30,
            'b4': -5,
            'c4': -15,
            'd4': -20,
            'e4': -20,
            'f4': -15,
            'g4': -5,
            'h4': 30,
            'a5': 30,
            'b5': 0,
            'c5': -15,
            'd5': -20,
            'e5': -20,
            'f5': -15,
            'g5': 0,
            'h5': 30,
            'a6': 30,
            'b6': -5,
            'c6': -10,
            'd6': -15,
            'e6': -15,
            'f6': -10,
            'g6': -5,
            'h6': 30,
            'a7': 40,
            'b7': 20,
            'c7': 0,
            'd7': -5,
            'e7': -5,
            'f7': 0,
            'g7': 20,
            'h7': 40,
            'a8': 50,
            'b8': 40,
            'c8': 30,
            'd8': 30,
            'e8': 30,
            'f8': 30,
            'g8': 40,
            'h8': 50,
        }
        return map[self.square]
    
class bishopMap():
    """
    general values given to black's bishops based on where they are on the board.
    """
    def __init__(self, square: str) -> None:
        self.square = square

    def mapValue(self) -> int:
        """
        returns the value from where the bishop is.
        """
        map = {
            'a1': 20,
            'b1': 10,
            'c1': 10,
            'd1': 10,
            'e1': 10,
            'f1': 10,
            'g1': 10,
            'h1': 20,
            'a2': 10,
            'b2': 0,
            'c2': 0,
            'd2': 0,
            'e2': 0,
            'f2': 0,
            'g2': 0,
            'h2': 10,
            'a3': 10,
            'b3': 0,
            'c3': -5,
            'd3': -10,
            'e3': -10,
            'f3': -5,
            'g3': 0,
            'h3': 10,
            'a4': 10,
            'b4': -5,
            'c4': -5,
            'd4': -10,
            'e4': -10,
            'f4': -5,
            'g4': -5,
            'h4': 10,
            'a5': 10,
            'b5': 0,
            'c5': -10,
            'd5': -10,
            'e5': -10,
            'f5': -10,
            'g5': 0,
            'h5': 10,
            'a6': 10,
            'b6': -10,
            'c6': -10,
            'd6': -10,
            'e6': -10,
            'f6': -10,
            'g6': -10,
            'h6': 10,
            'a7': 10,
            'b7': -5,
            'c7': 0,
            'd7': 0,
            'e7': 0,
            'f7': 0,
            'g7': -5,
            'h7': 10,
            'a8': 20,
            'b8': 10,
            'c8': 10,
            'd8': 10,
            'e8': 10,
            'f8': 10,
            'g8': 10,
            'h8': 20,
        }
        return map[self.square]

class rookMap():
    """
    general values given to black's rooks based on where they are on the board.
    """
    def __init__(self, square: str) -> None:
        self.square = square

    def mapValue(self) -> int:
        """
        returns the value from where the rook is.
        """
        map = {
            'a1': 0,
            'b1': 0,
            'c1': 0,
            'd1': 0,
            'e1': 0,
            'f1': 0,
            'g1': 0,
            'h1': 0,
            'a2': -5,
            'b2': -10,
            'c2': -10,
            'd2': -10,
            'e2': -10,
            'f2': -10,
            'g2': -10,
            'h2': -5,
            'a3': 5,
            'b3': 0,
            'c3': 0,
            'd3': 0,
            'e3': 0,
            'f3': 0,
            'g3': 0,
            'h3': 5,
            'a4': 5,
            'b4': 0,
            'c4': 0,
            'd4': 0,
            'e4': 0,
            'f4': 0,
            'g4': 0,
            'h4': 5,
            'a5': 5,
            'b5': 0,
            'c5': 0,
            'd5': 0,
            'e5': 0,
            'f5': 0,
            'g5': 0,
            'h5': 5,
            'a6': 5,
            'b6': 0,
            'c6': 0,
            'd6': 0,
            'e6': 0,
            'f6': 0,
            'g6': 0,
            'h6': 5,
            'a7': 5,
            'b7': 0,
            'c7': 0,
            'd7': 0,
            'e7': 0,
            'f7': 0,
            'g7': 0,
            'h7': 5,
            'a8': 0,
            'b8': 0,
            'c8': 0,
            'd8': -5,
            'e8': -5,
            'f8': 0,
            'g8': 0,
            'h8': 0,
        }
        return map[self.square]

class queenMap():
    """
    general value given to black's queen based on where she is on the board.
    """
    def __init__(self, square: str) -> None:
        self.square = square

    def mapValue(self) -> int:
        """
        returns the value from where the queen is.
        """
        map = {
            'a1': 20,
            'b1': 10,
            'c1': 10,
            'd1': 5,
            'e1': 5,
            'f1': 10,
            'g1': 10,
            'h1': 20,
            'a2': 10,
            'b2': 0,
            'c2': 0,
            'd2': 0,
            'e2': 0,
            'f2': 0,
            'g2': 0,
            'h2': 10,
            'a3': 10,
            'b3': 0,
            'c3': -5,
            'd3': -5,
            'e3': -5,
            'f3': -5,
            'g3': 0,
            'h3': 10,
            'a4': 5,
            'b4': 0,
            'c4': -5,
            'd4': -5,
            'e4': -5,
            'f4': -5,
            'g4': 0,
            'h4': 5,
            'a5': 0,
            'b5': 0,
            'c5': -5,
            'd5': -5,
            'e5': -5,
            'f5': -5,
            'g5': 0,
            'h5': 5,
            'a6': 10,
            'b6': -5,
            'c6': -5,
            'd6': -5,
            'e6': -5,
            'f6': -5,
            'g6': 0,
            'h6': 10,
            'a7': 10,
            'b7': 0,
            'c7': -5,
            'd7': 0,
            'e7': 0,
            'f7': 0,
            'g7': 0,
            'h7': 10,
            'a8': 20,
            'b8': 10,
            'c8': 10,
            'd8': 5,
            'e8': 5,
            'f8': 10,
            'g8': 10,
            'h8': 20,
        }
        return map[self.square]

class earlyKingMap():
    """
    general value given to black's king based on where he is on the board.
    """
    def __init__(self, square: str) -> None:
        self.square = square

    def mapValue(self) -> int:
        """
        returns the value from where the king is.
        """
        map = {
            'a1': 30,
            'b1': 40,
            'c1': 40,
            'd1': 50,
            'e1': 50,
            'f1': 40,
            'g1': 40,
            'h1': 30,
            'a2': 30,
            'b2': 40,
            'c2': 40,
            'd2': 50,
            'e2': 50,
            'f2': 40,
            'g2': 40,
            'h2': 30,
            'a3': 30,
            'b3': 40,
            'c3': 40,
            'd3': 50,
            'e3': 50,
            'f3': 40,
            'g3': 40,
            'h3': 30,
            'a4': 30,
            'b4': 40,
            'c4': 40,
            'd4': 50,
            'e4': 50,
            'f4': 40,
            'g4': 40,
            'h4': 30,
            'a5': 20,
            'b5': 30,
            'c5': 30,
            'd5': 40,
            'e5': 40,
            'f5': 30,
            'g5': 30,
            'h5': 20,
            'a6': 10,
            'b6': 20,
            'c6': 20,
            'd6': 20,
            'e6': 20,
            'f6': 20,
            'g6': 20,
            'h6': 10,
            'a7': -20,
            'b7': -20,
            'c7': 0,
            'd7': 0,
            'e7': 0,
            'f7': 0,
            'g7': -20,
            'h7': -20,
            'a8': -20,
            'b8': -30,
            'c8': -10,
            'd8': 0,
            'e8': 0,
            'f8': -10,
            'g8': -30,
            'h8': -20,
        }
        return map[self.square]
